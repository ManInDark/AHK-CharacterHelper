name: Create Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Master
        id: checkout
        uses: actions/checkout@master
      - name: Install AutoHotkey
        id: install-autohotkey
        run: |
          (New-Object System.Net.WebClient).DownloadFile("https://www.autohotkey.com/download/ahk.zip", (Get-Location).Path + "\ahk.zip");
          Expand-Archive .\ahk.zip -DestinationPath .\ahk-extracted\
      - name: Build Letters
        id: build-letters
        run: cmd /C '".\ahk-extracted\Compiler\Ahk2Exe.exe" /in "AutoHotkey Script Letters.ahk" /out "AutoHotkey Script Letters.exe" /silent /base ".\ahk-extracted\Compiler\Unicode 64-bit.bin"';
      - name: Build SoundControl
        id: build-soundcontrol
        run: cmd /C '".\ahk-extracted\Compiler\Ahk2Exe.exe" /in "AutoHotkey Script SoundControl.ahk" /out "AutoHotkey Script SoundControl.exe" /silent /base ".\ahk-extracted\Compiler\Unicode 64-bit.bin"';
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload helpfile
        id: upload-helpfile
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helpfile.txt
          asset_name: helpfile.txt
          asset_content_type: text/plain
      - name: Upload Letters
        id: upload-letters
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AutoHotkey Script Letters.exe
          asset_name: AutoHotkey Script Letters.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Upload SoundControl
        id: upload-soundcontrol
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AutoHotkey Script SoundControl.exe
          asset_name: AutoHotkey Script SoundControl.exe
          asset_content_type: application/vnd.microsoft.portable-executable